import{LitElement,html}from"lit";import{property,state}from"lit/decorators";class LCCEvent extends Event{constructor(e,t){super(e),this.action=t}}class EventBus extends EventTarget{subscribe(e,t){super.addEventListener(e,t)}unsubscribe(e,t){super.removeEventListener(e,t)}dispatchAction(t,e){e.forEach(e=>{this.dispatchEvent(new LCCEvent(e,t)),console.log("Emit",e,t)})}}function __decorate(e,t,s,i){var r,c=arguments.length,a=c<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,s,i);else for(var n=e.length-1;0<=n;n--)(r=e[n])&&(a=(c<3?r(a):3<c?r(t,s,a):r(t,s))||a);return 3<c&&a&&Object.defineProperty(t,s,a),a}class LocalConditionalCard extends LitElement{constructor(){super(...arguments),this.default="show",this._visible=!1,this._eventBusListener=e=>{"toggle"===e.action&&(this._visible=!this._visible)}}connectedCallback(){super.connectedCallback(),this._subscribe()}disconnectedCallback(){super.disconnectedCallback(),this._unsubscribe()}setConfig(e){if(!e.scope)throw new Error("Card config is missing a `scope` property. This is required");if(e.default&&!["show","hide"].includes(e.default))throw new Error("Config `default` must be either `show` or `hide`");this.scope=e.scope,this.default=e.default||"show",this._visible="show"===this.default,this._subscribe(),this._createCard(e.card)}set hass(e){this.HassPatcher.ensureHassIsPatched(e),this._card&&(this._card.hass=e)}getCardSize(){return this._visible&&this._card?this._card.getCardSize():0}render(){let e=!!this._visible;return this._card&&"hui-error-card"===this._card.localName&&(e=!0),this.style.setProperty("display",e?"":"none"),this.style.setProperty("margin","0"),e?html`${this._card}`:html``}_createCard(t){let s=t.type;s=s.startsWith("custom:")?s.substring("custom:".length):`hui-${s}-card`;try{if(customElements.get(s)){let e=createHassElement(s);e.setConfig(t),e.hass=this._hass,this._card=e}else customElements.whenDefined(s).then(()=>{let e=createHassElement(s);e.setConfig(t),e.hass=this._hass,this._card=e})}catch(e){console.error(s,e),this._createCard({type:"error",error:e.message,origConfig:t})}}_subscribe(){this._subscribed&&this._unsubscribe(),this.scope&&(this.HassPatcher.subscribe(this.scope,this._eventBusListener),this._subscribed=[this.scope,this._eventBusListener])}_unsubscribe(){this._subscribed&&(this.HassPatcher.unsubscribe(...this._subscribed),this._subscribed=void 0)}}function createHassElement(e){return document.createElement(e)}function createPatcherBoundCard(e){class t extends LocalConditionalCard{get HassPatcher(){return e}}return t}__decorate([property({reflect:!0})],LocalConditionalCard.prototype,"default",void 0),__decorate([property({reflect:!0})],LocalConditionalCard.prototype,"scope",void 0),__decorate([state()],LocalConditionalCard.prototype,"_visible",void 0),__decorate([state()],LocalConditionalCard.prototype,"_card",void 0);const ELEMENT_NAME="local-conditional-card",DOMAIN="local-conditional-card",TOGGLE_ACTION="toggle",Actions=[TOGGLE_ACTION],PATCHED_FLAG=Symbol("local-conditional-card__PATCHED");function is_hass_instance_patched(e){return!0===e[PATCHED_FLAG]}function mark_hass_instance_patched(e){e[PATCHED_FLAG]=!0}function is_locally_consumable_service_call(e,t,s){return e===DOMAIN&&!!Actions.includes(t)}const patch_hass_instance=(e,i)=>{const r=e.callService;e.callService=(e,t,s)=>{is_locally_consumable_service_call(e,t)?i.dispatchAction(t,s.ids):r(e,t,s)},mark_hass_instance_patched(e)};function ensure_hass_instance_patched(e,t,s){is_hass_instance_patched(s)||(patch_hass_instance(s,t),e(s))}const createPatcher=(e,t)=>({ensureHassIsPatched:ensure_hass_instance_patched.bind(null,t,e),subscribe:e.subscribe.bind(e),unsubscribe:e.unsubscribe.bind(e)}),notifyHomeAssistantOfHassPatch=e=>{const t=document.querySelector("home-assistant");if(!t)throw new Error("Failed to find HomeASsistant UI");t.hassChanged(e,e)},eventBus=new EventBus,patcher=createPatcher(eventBus,notifyHomeAssistantOfHassPatch);customElements.define(ELEMENT_NAME,createPatcherBoundCard(patcher));
